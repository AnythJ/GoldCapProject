@model DashboardViewModel

<style>
    body {
        font-family: Arial;
        background-color: #212529;
        color: #9ba6b0;
    }
    /*#region old */

    /*#region StatCircles */

    div .u-statCircle, div .c-statCircle, div.p-statCircle {
        animation: circleShow 0.6s linear;
    }

    @@keyframes circleShow {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }



    .circle .u-right {
        z-index: 3;
        transform: rotate( @Model.CirclesStats[0].PercentageStartRight);
    }
    @@keyframes u-left {
        100% {
            transform: rotate(@Model.CirclesStats[0].PercentageLeft);
        }
    }
    @@keyframes u-right {
        100% {
            transform: rotate(@Model.CirclesStats[0].PercentageRight);
        }
    }

    .circle .c-right {
        z-index: 3;
        transform: rotate(@Model.CirclesStats[1].PercentageStartRight);
    }
    @@keyframes c-left {
        100% {
            transform: rotate(@Model.CirclesStats[1].PercentageLeft);
        }
    }
    @@keyframes c-right {
        100% {
            transform: rotate(@Model.CirclesStats[1].PercentageRight);
        }
    }

    .circle .p-right {
        z-index: 3;
        transform: rotate(@Model.CirclesStats[2].PercentageStartRight);
    }
    @@keyframes p-left {
        100% {
            transform: rotate(@Model.CirclesStats[2].PercentageLeft);
        }
    }
    @@keyframes p-right {
        100% {
            transform: rotate(@Model.CirclesStats[2].PercentageRight);
        }
    }

   /*TEST*/
    .circle .c-left .progress {
        z-index: 4;
        animation: c-left @Model.CirclesStats[1].LeftSpeed linear both;
    }


    .circle .c-right .progress {
        animation: c-right @Model.CirclesStats[1].RightSpeed linear both;
        animation-delay: @Model.CirclesStats[1].LeftSpeed;
    }

    .circle .u-left .progress {
        z-index: 4;
        animation: u-left @Model.CirclesStats[0].LeftSpeed   linear both;
    }


    .circle .u-right .progress {
        animation: u-right @Model.CirclesStats[0].RightSpeed linear both;
        animation-delay: @Model.CirclesStats[0].LeftSpeed;
    }

    .circle .p-left .progress {
        z-index: 4;
        animation: p-left @Model.CirclesStats[2].LeftSpeed linear both;
    }


    .circle .p-right .progress {
        animation: p-right @Model.CirclesStats[2].RightSpeed linear both;
        animation-delay: @Model.CirclesStats[2].LeftSpeed;
    }


/*#endregion */

/*#endregion */

    /*#region Pills row */

    .statPill {
        background-color: #2d3339;
        color: #9ba6b0;
        border: 3px solid #434d56;
        border-radius: 5px;
        margin-right: 15px;
        max-height: auto;
    }

        .statPill p.pillAmount {
            font-size: 35px;
            font-weight: bold;
            text-align: center;
            margin-top: 5px;
            margin-bottom: 5px;
        }

        .statPill .pill-left {
            text-align: center;
            align-content: center;
        }

        .statPill .pill-right p {
            margin-top: 5px;
            margin-bottom: 5px;
            text-align: center;
        }
        div.statPillButtons {
            display: table;
            text-align: right;
            vertical-align: middle;
        }
            div.statPillButtons .btn {
                font-size: 15px;
                border-radius: 0;
                border: 3px solid #434d56;
            }
            div.statPillButtons .btn-outline-info:not(:first-of-type) {
                border-left: none;
            }
    .fa-arrow-up {
        color: red;
    }
    .fa-arrow-down {
        color: lawngreen;
    }

    /*#endregion */

    /*#region AreaChart row */
    .areaChartDiv {
        width: 100%;
        border: 3px solid #434d56;
        border-radius: 5px;
        padding: 0;
    }
    .areaChartCol {
        padding: 0;
    }
    .pieChartDiv {
        width: 100%;
    }
    /*#endregion */

    /*#region Table row */
    .percentageCol {
        text-align: right;
        font-weight: bold;
    }

    .stackedCircles {
        min-width: 187px;
        margin: auto 0;
    }

    #adviceDiv {
        border: 3px solid #434d56;
        border-radius: 5px;
        background-color: #2d3339;
        color: #9ba6b0;
        padding: 0;
    }
        #adviceDiv .adviceHeader {
            padding: 6px 0 0 10px;
            width: 100%;
            height: 41px;
            font-size: 20px;
            font-weight: bolder;
            border-bottom: 1px solid #434d56;
            background-color: #434d56;
        }
    /*#endregion */

    .fa-arrow-up {
        color: red;
    }
    .fa-arrow-down {
        color: lawngreen;
    }
</style>

@section Styles{
    <link href="~/css/DashboardCSS/areaChart.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/pieChart.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/underCircle.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/cateCircle.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/paycheckCircle.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/listColumn.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/topCategoryColumn.css" rel="stylesheet" />
    <link href="~/lib/jquery-confirm/jquery-confirm.min.css" rel="stylesheet" />
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link rel="shortcut icon" href="#">
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/series-label.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script src="~/jss/lineChart.js"></script>
    <script src="~/jss/pieChart.js"></script>
    <title></title>
</head>

<body>
    <div style="height:100%;overflow-y:auto;">
        <div class="row" style="margin:15px 0 15px 15px">
            <div class="col statPill">
                <div class="row">
                    <div class="col my-auto ms-4 pill-left">
                        <span>Highest expense</span>
                        <p class="pillAmount">@Model.PillsStats[0].AmountInt$</>
                    </div>
                    <div class="col pill-right">
                        <p>@Model.PillsStats[0].Category</p>
                        <p>@Model.PillsStats[0].DatetimeString</p>
                        <p>@Model.PillsStats[0].Percentage% of @Model.CirclesStats[0].SumLast30Days$</p>
                    </div>
                </div>
            </div>
            <div class="col statPill">
                <div class="row">
                    <div class="col my-auto pill-left">
                        <span>Last expense</span>
                        <p class="pillAmount">@Model.PillsStats[1].AmountInt$</p>
                    </div>
                    <div class="col pill-right">
                        <p>@Model.PillsStats[1].Category</p>
                        <p>@Model.PillsStats[1].DatetimeString</p>
                        <input id="percentageArrowValue" type="hidden" value="@Model.PillsStats[1].Percentage" />
                        <p style="text-align:center;"><i id="arrowUp" hidden class="fas fa-arrow-up"></i><i id="arrowDown" hidden class="fas fa-arrow-down"></i><span id="arrowPercentage"> @Model.PillsStats[1].Percentage% </span><span> average</span></p>
                    </div>
                </div>
            </div>
            <div class="col statPill">
                <div class="row">
                    <div class="col my-auto pill-left">
                        <span>Lowest expense</span>
                        <p class="pillAmount">@Model.PillsStats[2].AmountInt$</p>
                    </div>
                    <div class="col pill-right">
                        <p>@Model.PillsStats[2].Category</p>
                        <p>@Model.PillsStats[2].DatetimeString</p>
                        <p>@Model.PillsStats[2].Percentage% of @Model.CirclesStats[0].SumLast30Days$</p>
                    </div>
                </div>
            </div>
            <div class="col statPillButtons">
                @Html.ActionLink("Week", "Index", "Dashboard", new { period = 7 }, new { @class = "btn btn-outline-info btn-custom", @id = "btnWeek", @onclick="stayActive(this.id)" })
                @Html.ActionLink("Month", "Index", "Dashboard", new { period = 30 }, new { @class = "btn btn-outline-info btn-custom", @id = "btnMonth", @onclick = "stayActive(this.id)" })
                @Html.ActionLink("Year", "Index", "Dashboard", new { period = 365 }, new { @class = "btn btn-outline-info btn-custom", @id = "btnYear", @onclick = "stayActive(this.id)" })
                <a onclick="showInPopup('@Url.Action("RecurringPayments","Dashboard",new { id = 0},Context.Request.Scheme)',
                                        'Recurring payments')" class="btn btn-outline-light m-1">Recurring payments</a>
            </div>
        </div>

        <div class="row" style="margin: 15px 0 15px 15px; ">
            <div class="col-8 areaChartCol">
                <figure id="areafigure" class="highcharts-figure">
                    <div id="container" class="areaChartDiv"></div>
                </figure>
            </div>
            <div class="col-4">
                <figure id="pieFigure" class="highcharts-figure">
                    <div id="container-pie" class="pieChartDiv"></div>
                </figure>
            </div>
        </div>

        <div class="row" style="margin: 15px 0 15px 15px;">
            <div class="col-6 tableColumn table-responsive" id="view-all">
                @await Html.PartialAsync("_ViewAll", Model.Expenses)
            </div>
            <div class="col-2 stackedCircles container">
                <div class="u-statCircle">
                    <div class="smallerCircle">
                        <p id="amountP" class="boldHeader" onmouseover="showPercentage()" data-toggle="tooltip" data-placement="top" title="@Model.CirclesStats[0].TooltipPercentage%">@Model.CirclesStats[0].SumLast30Days$</p>
                        <p>of @Model.CirclesStats[0].SumBeforeLast30Days$</p>
                        <hr style="margin:5px 10% 5px 10%;padding:0;height:3px;" />
                        <p><small>@Model.CirclesStats[0].UnderMonthAmount$ under</small></p>
                        <p><small>last @Model.CirclesStats[0].PeriodName</small></p>
                    </div>
                    <div class="circle">
                        <div class="bar u-left">
                            <div class="progress"></div>
                        </div>
                        <div class="bar u-right">
                            <div class="progress"></div>
                        </div>
                    </div>
                </div>

                <div class="c-statCircle">
                    <div class="smallerCircle">
                        <p class="boldHeader">@Model.CirclesStats[1].TopCategoryPercentage%</p>
                        <p>@Model.CirclesStats[1].TopCategoryName</p>
                        <hr style="margin:5px 10% 5px 10%;padding:0;height:3px;" />
                        <p><small>@Model.CirclesStats[1].TopCategoryAmount$ of</small></p>
                        <p><small>@Model.CirclesStats[1].SumLast30Days$</small></p>
                    </div>
                    <div class="circle">
                        <div class="bar c-left">
                            <div class="progress"></div>
                        </div>
                        <div class="bar c-right">
                            <div class="progress"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-2 topCategoryColumn table-responsive">
                <table class="table table-hover">
                    <thead class="sticky-top">
                        <tr>
                            <td id="tableRowId">Categories by amount</td>
                            <td class="percentageCol">%</td>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        @foreach (var item in Model.Categories)
                        {
                            <tr class="trClass">
                                <td>
                                    @item.CategoryName
                                </td>
                                <td class="percentageCol">
                                    @String.Format("{0:0.00}", item.CategoryPercentage)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-2 stackedCircles">
                    <div class="p-statCircle">
                        <div class="smallerCircle">
                            <p class="boldHeader">@Model.CirclesStats[2].SumLast30Days$</p>
                            <p>
                                of <a id="paycheckAmount">@Model.CirclesStats[2].TotalIncome$</a>
                                <input id="paycheckInputField" type="text" hidden style="width:50px;height:18px;" />
                                <a onclick="showInPopup('@Url.Action("IncomeList","Dashboard",new { id = 0},Context.Request.Scheme)','Income list')"><i class="fas fa-pen"></i></a>
                            </p>
                            <hr style="margin:5px 10% 5px 10%;padding:0;height:3px;" />
                            <p><small>@Model.CirclesStats[2].IncomePercentage% of your</small></p>
                            <p><small>income</small></p>
                        </div>
                        <div class="circle">
                            <div class="bar p-left">
                                <div class="progress"></div>
                            </div>
                            <div class="bar p-right">
                                <div class="progress"></div>
                            </div>
                        </div>
                    </div>
            </div>
            @*<div class="col-2" id="adviceDiv">
                    <label class="adviceHeader">Advice</label>
                    <p><a onclick="showInPopup('@Url.Action("CreateOrEdit","Dashboard",new { id = 0, preStatus = 0},Context.Request.Scheme)','New expense')">Add daily payments to make your life easier</a></p>
                    <p><a onclick="showInPopup('@Url.Action("CreateOrEdit","Dashboard",new { id = 0, preStatus = 2},Context.Request.Scheme)','New expense')">Add monthly payments to make your life easier</a></p>
                    <p><a onclick="showInPopup('@Url.Action("CreateOrEdit","Dashboard",new { id = 0, preStatus = 4},Context.Request.Scheme)','New expense')">Add your custom recurring payment</a></p>
                    <p><a onclick="showInPopup('@Url.Action("RecurringPayments","Dashboard",new { id = 0},Context.Request.Scheme)','Recurring payments')" class="btn btn-success btn-sm">Recurring payments</a>
                </div>*@
        </div>

        <div class="row" style="margin:20px 0 20px 20px;">

        </div>
    </div>

</body>
</html>

<script>
    function getParameterByName(name, url = window.location.href) {
        name = name.replace(/[\[\]]/g, '\\$&');
        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
    var period;
    if (getParameterByName('period') == null) {
        period = 30;
    } else {
        period = parseFloat(getParameterByName('period'));
    }
    console.log(period);
    $(showLineChart(period));
    $(showPieChart(period));
    function showPercentage() {
        $('#amountP').tooltip('show');
    }

    $(document).ready(function () {
        var arrowPercentage = $('#percentageArrowValue').val();
        if (parseFloat(arrowPercentage) > 0) {
            document.getElementById('arrowDown').setAttribute("hidden", "");
            document.getElementById('arrowUp').removeAttribute("hidden");
            document.getElementById('arrowPercentage').style.color = 'red';
        }
        else {
            document.getElementById('arrowUp').setAttribute("hidden", "");
            document.getElementById('arrowDown').removeAttribute("hidden");
            document.getElementById('arrowPercentage').style.color = 'lawngreen';
        }
    });


    function stayActive(id) {
        document.getElementById(id).classList.add("active");
    }
    $(document).ready(function () {
        var period = getParameterByName("period");
        console.log(period);
        switch (parseFloat(period)) {
            case 7:
                document.getElementById('btnWeek').classList.add("active");
                break;
            case 30:
                document.getElementById('btnMonth').classList.add("active");
                break;
            case 365:
                document.getElementById('btnYear').classList.add("active");
                break;
            default:
                document.getElementById('btnMonth').classList.add("active");
        }
        
    });

    //function EditPaycheck() {
    //    var amountField = document.getElementById('paycheckAmount');
    //    if (amountField.hidden == false) {
    //        amountField.hidden = true;
    //        document.getElementById('paycheckInputField').hidden = false;
    //    }
    //    else {
    //        amountField.hidden = false;
    //        document.getElementById('paycheckInputField').hidden = true;
    //    }
    //}
</script>

@section Scripts{
    <script src="~/lib/jquery-confirm/jquery-confirm.min.js"></script>
}
