@model DashboardViewModel

<style>
    /*#region StatCircles */

    .circle .u-right {
        z-index: 3;
        transform: rotate(@Model.CirclesStats[0].PercentageStartRight);
    }
    @@keyframes u-left {
        100% {
            transform: rotate(@Model.CirclesStats[0].PercentageLeft);
        }
    }
    @@keyframes u-right {
        100% {
            transform: rotate(@Model.CirclesStats[0].PercentageRight);
        }
    }

    .circle .c-right {
        z-index: 3;
        transform: rotate(@Model.CirclesStats[1].PercentageStartRight);
    }
    @@keyframes c-left {
        100% {
            transform: rotate(@Model.CirclesStats[1].PercentageLeft);
        }
    }
    @@keyframes c-right {
        100% {
            transform: rotate(@Model.CirclesStats[1].PercentageRight);
        }
    }

    .circle .p-right {
        z-index: 3;
        transform: rotate(@Model.CirclesStats[2].PercentageStartRight);
    }
    @@keyframes p-left {
        100% {
            transform: rotate(@Model.CirclesStats[2].PercentageLeft);
        }
    }
    @@keyframes p-right {
        100% {
            transform: rotate(@Model.CirclesStats[2].PercentageRight);
        }
    }


    .circle .c-left .progress {
        z-index: 4;
        animation: c-left @Model.CirclesStats[1].LeftSpeed linear both;
    }


    .circle .c-right .progress {
        animation: c-right @Model.CirclesStats[1].RightSpeed linear both;
        animation-delay: @Model.CirclesStats[1].LeftSpeed;
    }

    .circle .u-left .progress {
        z-index: 4;
        animation: u-left @Model.CirclesStats[0].LeftSpeed   linear both;
    }


    .circle .u-right .progress {
        animation: u-right @Model.CirclesStats[0].RightSpeed linear both;
        animation-delay: @Model.CirclesStats[0].LeftSpeed;
    }

    .circle .p-left .progress {
        z-index: 4;
        animation: p-left @Model.CirclesStats[2].LeftSpeed linear both;
    }


    .circle .p-right .progress {
        animation: p-right @Model.CirclesStats[2].RightSpeed linear both;
        animation-delay: @Model.CirclesStats[2].LeftSpeed;
    }


    
    
/*#endregion */
    .mainBody {
        overflow-y: auto;
        overflow-x: hidden;
    }

        .mainBody::-webkit-scrollbar {
            display: block;
            width: 3px;
            background-color: var(--bg-navbar);
        }

        .mainBody::-webkit-scrollbar-track-piece:start {
            margin-top: 4rem;
        }

        .mainBody::-webkit-scrollbar-thumb {
            background-color: #0790ab;
        }
    /*#region First row */

    div.row-first {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }

    .statPill {
        border: 3px solid var(--text-primary);
        border-radius: 5px;
        background-color: var(--bg-navbar);
        padding: 0.2rem;
        display: flex;
        align-content: center;
        justify-content: space-evenly;
        margin: 0.3rem;
        flex: 1;
    }

        .statPill:last-child {
            border-color: transparent;
            background-color: transparent;
        }

    .pill-right p {
        text-align: center;
        margin: 0.2rem 0;
    }
    .pill-right {
        text-align: center;
        margin: 0.2rem 0;
    }
    .pill-recurring {
        display: flex;
        align-items: center;
        flex-direction: column;
    }
    .pill-date-span {
        font-weight: bold;
        font-size: 1.2rem;
    }

    p.pillAmount {
        font-size: 2.2rem;
        font-weight: bold;
        text-align: center;
        margin-bottom: 0;
    }

    .pill-left {
        text-align: center;
    }

    #btnWeek, #btnMonth, #btnYear, #btnRecurring {
        min-width: 4.5rem;
        margin: 0.1rem;
    }

    /*#endregion */

    /*#region Second row */

    .row-second {
        display: flex;
        justify-content: stretch;
        margin: 0.3rem;
        align-items: center;
    }

    #container {
        border: 3px solid var(--text-primary);
        border-radius: 5px;
        width: 100%;
        padding: 0;
        height: 360px;
    }

    #container-pie {
        border: 3px solid;
        border-color: transparent;
        border-radius: 5px;
        width: 100%;
        padding: 0;
        height: 360px;
    }

    #areafigure {
        flex: 3 !important;
    }

    #pieFigure {
        flex: 1 !important;
    }

    #container, #container-pie {
        width: 100% !important;
    }
    @@media only screen and (max-width: 1392px)
    {
        .mainBody {
            overflow-y: auto;
        }
    }
    @@media only screen and (max-width: 850px) {
        .row-second {
            flex-direction: column;
        }

        #areafigure, #pieFigure {
            width: 100%;
        }

        /*.incomeCircle, .topCategoryColumn, .stackedCircles, .tableColumn, .row-first, .row-second {
            margin-bottom: 0.5rem;
        }*/
        .stackedCircles {
            margin: 0.5rem 0.2rem !important;
        }
    }

    @@media only screen and (max-width: 768px) {
        .mainBody::-webkit-scrollbar-track-piece:end {
            margin-bottom: 5rem;
        }
        .mainBody::-webkit-scrollbar-track-piece:start {
            margin-top: 0;
        }
        .row-first {
            flex-wrap: nowrap;
            flex-direction: column;
        }
    }

    /*#endregion */

    .third-row {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        margin: 0 0.3rem;
    }

    .tableColumn {
        flex: 3;
        margin-top: 0.3rem;
    }
    .stackedCircles {
        flex: 1;
        margin: 0 0.2rem;
        margin-top: 0.3rem;
        z-index: 1;
    }
    .topCategoryColumn {
        flex: 1;
        margin-top: 0.3rem;
    }
    .incomeCircle {
        flex: 1;
        margin: 0 0.2rem;
        margin-top: 0.3rem;
        z-index: 1;
    }

    @@media only screen and (max-width: 768px) {
        .navbar-side {
            width: 100vw !important;
            height: 5rem !important;
            bottom: 0 !important;
        }

        .navbar-nav-side {
            flex-direction: row;
        }

        .nav-side-link {
            justify-content: center;
        }

        main {
            margin: 0 !important;
            margin-bottom: 5rem !important;
        }

        .goldcapLogo {
            display: none;
        }

        .link-text {
            display: none !important;
        }
        .tableColumn {
            min-width: 100%;
        }
    }

    @@media only screen and (min-width: 769px) {
        .navbar-side {
            width: 14rem;
            height: 100vh;
            top: 0;
        }

        .goldcapLogo-text {
            display: inline;
        }

        .navbar-side:hover {
            width: 14rem !important;
        }

            .navbar-side:hover .link-text {
                display: inline !important;
            }

            .navbar-side:hover .goldcapLogo i {
                display: none !important;
            }

            .navbar-side:hover ~ .navbar-top {
                z-index: -1;
            }

        .navbar-top {
            display: flex;
        }

        main {
            margin-top: 4rem;
        }

        #collapseSideNavbar {
            display: inline-block;
        }
    }

    @@media only screen and (max-width: 464px) {
        .descriptionTd, .descriptionTh {
            display: none;
        }
    }


    @@media only screen and (max-width: 436px) {
        .pill-left {
            flex: 0;
            display: none;
        }
        #btnRecurring {
            width: 100%;
        }
        .pill-right {
            width: 100%;
        }
    }
    
</style>

<!-- #region links -->

@section Styles{
    <link href="~/css/DashboardCSS/Index.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/areaChart.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/pieChart.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/underCircle.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/cateCircle.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/paycheckCircle.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/listColumn.css" rel="stylesheet" />
    <link href="~/css/DashboardCSS/topCategoryColumn.css" rel="stylesheet" />

    <link href="~/lib/jquery-confirm/jquery-confirm.min.css" rel="stylesheet" />
}

<!-- #endregion -->

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link rel="shortcut icon" href="#">
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/series-label.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script src="~/jss/lineChart.js"></script>
    <script src="~/jss/pieChart.js"></script>
    <title></title>
</head>

<body class="mainBody">
    <div class="mainDiv-div">
        <div class="row-first">
                <div class="statPill">
                    <div class="pill-left">
                        <span>Highest expense</span>
                        <p class="pillAmount">@Model.PillsStats[0].AmountInt$</>
                    </div>
                    <div class="pill-right">
                        <p>@Model.PillsStats[0].Category</p>
                        <p>@Model.PillsStats[0].DatetimeString</p>
                        <p>@Model.PillsStats[0].Percentage% of @Model.CirclesStats[0].SumLast30Days$</p>
                    </div>
                </div>
                <div class="statPill">
                    <div class="pill-left">
                        <span>Last expense</span>
                        <p class="pillAmount">@Model.PillsStats[1].AmountInt$</p>
                    </div>
                    <div class="pill-right">
                        <p>@Model.PillsStats[1].Category</p>
                        <p>@Model.PillsStats[1].DatetimeString</p>
                        <input id="percentageArrowValue" type="hidden" value="@Model.PillsStats[1].Percentage" />
                        <p style="text-align:center;"><i id="arrowUp" hidden class="fas fa-arrow-up"></i><i id="arrowDown" hidden class="fas fa-arrow-down"></i><span id="arrowPercentage"> @Model.PillsStats[1].Percentage% </span><span> average</span></p>
                    </div>
                </div>
                <div class="statPill">
                    <div class="pill-left">
                        <span>Lowest expense</span>
                        <p class="pillAmount">@Model.PillsStats[2].AmountInt$</p>
                    </div>
                    <div class="pill-right">
                        <p>@Model.PillsStats[2].Category</p>
                        <p>@Model.PillsStats[2].DatetimeString</p>
                        <p>@Model.PillsStats[2].Percentage% of @Model.CirclesStats[0].SumLast30Days$</p>
                    </div>
                </div>
                <div class="statPill">
                    <div class="pill-recurring">
                        <p class="pill-date-span">@DateTime.Now.AddDays(-30).ToString("dd MMM yyy")  -  @DateTime.Now.ToString("dd MMM yyy")</p>
                        <a id="btnRecurring" onclick="showInPopup('@Url.Action("RecurringPayments","Dashboard",new { id = 0},Context.Request.Scheme)',
                                                'Recurring payments')" class="btn btn-outline-light">Recurring payments</a>
                    </div>
                </div>



            @*<div class="statPill statPillButtons">
                    @Html.ActionLink("Week", "Index", "Dashboard", new { period = 7 }, new { @class = "btn btn-outline-info btn-custom", @id = "btnWeek", @onclick = "stayActive(this.id)" })
                    @Html.ActionLink("Month", "Index", "Dashboard", new { period = 30 }, new { @class = "btn btn-outline-info btn-custom", @id = "btnMonth", @onclick = "stayActive(this.id)" })
                    @Html.ActionLink("Year", "Index", "Dashboard", new { period = 365 }, new { @class = "btn btn-outline-info btn-custom", @id = "btnYear", @onclick = "stayActive(this.id)" })
                    <a onclick="showInPopup('@Url.Action("RecurringPayments","Dashboard",new { id = 0},Context.Request.Scheme)',
                                                'Recurring payments')" class="btn btn-outline-light m-1">Recurring payments</a>
                </div>*@
        </div>

        <div class="row-second">
                <figure id="areafigure" class="highcharts-figure">
                    <div id="container"></div>
                </figure>
                <figure id="pieFigure" class="highcharts-figure">
                    <div id="container-pie"></div>
                </figure>
        </div>

        <div class="third-row">
                <div class="tableColumn table-responsive" id="view-all">
                    @await Html.PartialAsync("_ViewAll", Model.Expenses)
                </div>
                <div class="stackedCircles">
                    <div class="u-statCircle">
                        <div class="smallerCircle">
                            <p id="amountP" class="boldHeader" onmouseover="showPercentage()" data-toggle="tooltip" data-placement="top" title="@Model.CirclesStats[0].TooltipPercentage%">@Model.CirclesStats[0].SumLast30Days$</p>
                            <p>of @Model.CirclesStats[0].SumBeforeLast30Days$</p>
                            <hr style="margin:5px 10% 5px 10%;padding:0;height:3px;" />
                            <p><small>@Model.CirclesStats[0].UnderMonthAmount$ @Model.CirclesStats[0].AdditionalString</small></p>
                            <p><small>last @Model.CirclesStats[0].PeriodName</small></p>
                        </div>
                        <div class="circle">
                            <div class="bar u-left">
                                <div class="progress"></div>
                            </div>
                            <div class="bar u-right">
                                <div class="progress"></div>
                            </div>
                        </div>
                    </div>

                    <div class="c-statCircle">
                        <div class="smallerCircle">
                            <p class="boldHeader">@Model.CirclesStats[1].TopCategoryPercentage%</p>
                            <p>@Model.CirclesStats[1].TopCategoryName</p>
                            <hr style="margin:5px 10% 5px 10%;padding:0;height:3px;" />
                            <p><small>@Model.CirclesStats[1].TopCategoryAmount$ of</small></p>
                            <p><small>@Model.CirclesStats[1].SumLast30Days$</small></p>
                        </div>
                        <div class="circle">
                            <div class="bar c-left">
                                <div class="progress"></div>
                            </div>
                            <div class="bar c-right">
                                <div class="progress"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="topCategoryColumn table-responsive">
                    <table class="table table-hover">
                        <thead class="sticky-top">
                            <tr>
                                <td id="tableRowId">Categories by amount</td>
                                <td class="percentageCol">%</td>
                            </tr>
                        </thead>
                        <tbody id="tableBody">
                            @foreach (var item in Model.Categories)
                            {
                                <tr class="trClass">
                                    <td>
                                        @item.CategoryName
                                    </td>
                                    <td class="percentageCol">
                                        @String.Format("{0:0.00}", item.CategoryPercentage)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="incomeCircle">
                    <div class="p-statCircle">
                        <div class="smallerCircle">
                            <p class="boldHeader">@Model.CirclesStats[2].SumLast30Days$</p>
                            <p>
                                of <a id="paycheckAmount">@Model.CirclesStats[2].TotalIncome$</a>
                                <input id="paycheckInputField" type="text" hidden style="width:50px;height:18px;" />
                                <a onclick="showInPopup('@Url.Action("IncomeList","Dashboard",new { id = 0},Context.Request.Scheme)','Income list')"><i class="fas fa-pen"></i></a>
                            </p>
                            <hr style="margin:5px 10% 5px 10%;padding:0;height:3px;" />
                            <p><small>@Model.CirclesStats[2].IncomePercentage% of your</small></p>
                            <p><small>income</small></p>
                        </div>
                        <div class="circle">
                            <div class="bar p-left">
                                <div class="progress"></div>
                            </div>
                            <div class="bar p-right">
                                <div class="progress"></div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>


    </div>

</body>
</html>

<script>
    function getParameterByName(name, url = window.location.href) {
        name = name.replace(/[\[\]]/g, '\\$&');
        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
    var period;
    if (getParameterByName('period') == null) {
        period = 30;
    } else {
        period = parseFloat(getParameterByName('period'));
    }

    $(document).ready(function () {
        $(showLineChart(period));
        $(showPieChart(period));
    });
    
    function showPercentage() {
        $('#amountP').tooltip('show');
    }

    $(document).ready(function () {
        var arrowPercentage = $('#percentageArrowValue').val();
        if (parseFloat(arrowPercentage) > 0) {
            document.getElementById('arrowDown').setAttribute("hidden", "");
            document.getElementById('arrowUp').removeAttribute("hidden");
            document.getElementById('arrowPercentage').style.color = 'red';
        }
        else {
            document.getElementById('arrowUp').setAttribute("hidden", "");
            document.getElementById('arrowDown').removeAttribute("hidden");
            document.getElementById('arrowPercentage').style.color = 'lawngreen';
        }
    });


    function stayActive(id) {
        document.getElementById(id).classList.add("active");
    }
    $(document).ready(function () {
        var period = getParameterByName("period");
        switch (parseFloat(period)) {
            case 7:
                document.getElementById('btnWeek').classList.add("active");
                break;
            case 30:
                document.getElementById('btnMonth').classList.add("active");
                break;
            case 365:
                document.getElementById('btnYear').classList.add("active");
                break;
            default:
                document.getElementById('btnMonth').classList.add("active");
        }

    });

    function EditPaycheck() {
        var amountField = document.getElementById('paycheckAmount');
        if (amountField.hidden == false) {
            amountField.hidden = true;
            document.getElementById('paycheckInputField').hidden = false;
        }
        else {
            amountField.hidden = false;
            document.getElementById('paycheckInputField').hidden = true;
        }
    }
</script>

@section Scripts{
    <script src="~/lib/jquery-confirm/jquery-confirm.min.js"></script>
}
