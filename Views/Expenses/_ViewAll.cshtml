@model ExpensesListViewModel



<style>
    
</style>


<body class="">
    <a id="sortCollapseButton" onclick="sortCollapseFunction()">
        <div id="sortCollapseButtonInside" class="sortCollapseNotActive">

        </div>
    </a>
    <div class="wholeList">
        <div id="listCol" class="table-responsive">
            <table class="table table-hover">
                <thead class="sticky-top">
                    <tr class="align-text-top">
                        <th>
                            <a style="cursor:pointer;" onclick="ListSort('@Url.Action("Sort", "Expenses", new { sortOrder = (ViewBag.AmountSortParm == null ? "Amount" : ViewBag.AmountSortParm)}, Context.Request.Scheme)','Sort')">Amount</a>
                        </th>
                        <th>
                            <a style="cursor:pointer;" onclick="ListSort('@Url.Action("Sort","Expenses",new { sortOrder = (ViewBag.CategorySortParm == null ? "Category" : ViewBag.CategorySortParm)},Context.Request.Scheme)','Sort')">Category</a>
                        </th>
                        <th class="descriptionTh">
                            Description
                        </th>
                        <th class="date_column">
                            <a style="cursor:pointer;" onclick="ListSort('@Url.Action("Sort","Expenses",new { sortOrder = (ViewBag.DateSortParm == null ? "Date" : ViewBag.DateSortParm)},Context.Request.Scheme)','Sort')">Date</a>
                        </th>
                        <th class="button_column">
                            <a onclick="showInPopup('@Url.Action("CreateOrEdit","Expenses",new { id = 0},Context.Request.Scheme)','New expense')" class="btn btn-succes-color btn-sm">New expense</a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Expenses)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category)
                            </td>
                            <td class="descriptionTd">
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td class="date_column">
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td class="button_column">
                                <a onclick="showInPopup('@Url.Action("CreateOrEdit","Expenses",new { id = item.Id},Context.Request.Scheme)','Update expense')" class="btn btn-info-color btn-sm">Edit</a>
                                @*<form asp-action="Delete" asp-route-id="@item.Id" onsubmit="return jQueryAjaxDeleteSort(this)" class="d-inline">
                                        <input type="submit" value="Delete" class="btn btn-danger btn-sm" />
                                    </form>*@
                                <a class="btn btn-danger-color btn-sm" onclick="jQueryAjaxDeleteSort('@Url.Action("Delete","Expenses",new { id = item.Id},Context.Request.Scheme)')">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="sortMenu" class="sortMenu">
            <form id="sortMenuForm" asp-action="Sort" onsubmit="return PostSort(this);" autocomplete="off">
                <p class="sort-header sticky-top">
                    <a class="refresh-button" onclick="JqueryAjaxSort('@Url.Action("Sort", "Expenses", new { sortOrder = "default", refresh = true}, Context.Request.Scheme)','Sort', true)">
                        <i class="fas fa-sync-alt"></i>
                    </a>
                    <span>Sort options</span>
                    <input type="submit" value="Search" class="btn btn-outline-info btn-sm btn-sort" />
                </p>
                <p class="sort-paragraph">
                    <label id="descriptionLabel">Description<input id="descriptionField" type="text" placeholder="search" asp-for="SortMenu.DescriptionSearch" /></label>
                </p>
                <p class="sort-paragraph price-section">
                    <input id="priceFromField" asp-for="SortMenu.PriceFrom" type="number" placeholder="from" /><input type="number" class="currency" placeholder="$" disabled />
                    <span class="priceLink"></span>
                    <input id="priceToField" asp-for="SortMenu.PriceTo" type="number" placeholder="to" /><input type="number" class="currency" placeholder="$" disabled />
                </p>
                <div class="sort-paragraph">
                    <label class="section-name">Categories</label>
                    <ul id="categoryList">
                        @for (int i = 0; i < Model.CategoriesList.Count(); i++)
                        {
                            <li>
                                <div class="form-check">
                                    <label class="form-check-label">@Html.CheckBoxFor(c => c.SortMenu.ChosenCategories[i], new { @class = "form-check-input", @type = "checkbox" }) @Model.CategoriesList[i].Name</label>
                                </div>
                            </li>
                        }
                    </ul>
                    @if (Model.CategoriesList.Count() > 7)
                    {
                        <span id="showMore" onclick="showMore()">Show More</span><i onclick="showMore()" id="showArrow" class="fas fa-chevron-down"></i>
                    }
                    else
                    { <span id="showMore"></span>}
                </div>
                <div class="sort-paragraph">
                    <label class="section-name">Date</label>
                    <div class="date-section">
                        <input type="datetime-local" id="date-from" asp-for="SortMenu.DateFrom" />
                        <input type="datetime-local" asp-for="SortMenu.DateTo" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</body>


<script>
    $(document).ready(function () {
        if (sessionStorage.getItem('showButton') != null) {
            document.getElementById('showMore').textContent = sessionStorage.getItem('showButton');
            showMore();
        }
        else {
            document.getElementById('showMore').textContent = "Show Less";
            showMore();
        }

        if ('@Model.SortMenu' == null || '@Model.SortMenu' == '') {
                sessionStorage.setItem("filtered", "false");
            }


    });
    function showMore() {
        var x = $('#showMore').text();
        var listLen = document.getElementById('categoryList').getElementsByTagName("li").length;
        if (x == 'Show More') {
            $('#categoryList li:hidden').slice(0, listLen).show();
            if ($('#categoryList li').length == $('#categoryList li:visible').length) {
                $('#showMore').innerHtml == 'Show Less';
                document.getElementById('showMore').innerHTML = 'Show Less';
                document.getElementById('showArrow').classList.remove('fa-chevron-down');
                document.getElementById('showArrow').classList.add('fa-chevron-up');
                sessionStorage.setItem('showButton', 'Show More');
            }
        }
        else if (x == 'Show Less') {
            $('#categoryList li').slice(7, listLen).hide();
            $('#showMore').innerHtml == 'Show More';
            document.getElementById('showMore').innerHTML = 'Show More';
            document.getElementById('showArrow').classList.add('fa-chevron-down');
            document.getElementById('showArrow').classList.remove('fa-chevron-up');
            sessionStorage.setItem('showButton', 'Show Less');
        }
    };
    ListSort = (url, title, refresh) => {
        var form = document.getElementById('sortMenuForm');
        if (sessionStorage.getItem("filtered") == "true") {
            url = url + "&filtered=True";
        }

        var sortOrder;
        if (url.indexOf("sortOrder=Date") != -1) sortOrder = 'Date';
        if (url.indexOf("sortOrder=date_desc") != -1) sortOrder = 'date_desc';
        if (url.indexOf("sortOrder=Amount") != -1) sortOrder = 'Amount';
        if (url.indexOf("sortOrder=amount_desc") != -1) sortOrder = 'amount_desc';
        if (url.indexOf("sortOrder=Category") != -1) sortOrder = 'Category';
        if (url.indexOf("sortOrder=category_desc") != -1) sortOrder = 'category_desc';

        sessionStorage.setItem("sortOrder", sortOrder);

        try {
            $.ajax({
                type: 'POST',
                url: url,
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function (res) {
                    $('#view-all').html(res.html);
                },
                error: function (err) {
                    console.log(err)
                }
            })
            return false;
        } catch (ex) {
            console.log(ex)
        }
    };
    PostSort = form => {
        try {
            $.ajax({
                type: 'POST',
                url: form.action + "?&filtered=True",
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function (res) {
                    $('#view-all').html(res.html);
                    sessionStorage.setItem("filtered", "true");
                },
                error: function (err) {
                    console.log(err)
                }
            })
            //to prevent default form submit event
            return false;
        } catch (ex) {
            console.log(ex)
        }
    }
    jQueryAjaxDeleteSort = (url) => {
        try {
            $.confirm({
                title: 'Delete Expense',
                content: 'Are you sure you want to delete this expense?',
                type: 'light',
                theme: 'dark',
                icon: 'fa fa-warning',
                animateFromElement: false,
                offsetBottom: 600,
                typeAnimated: true,
                draggable: true,
                buttons: {
                    confirm: {
                        text: 'Confirm',
                        btnClass: 'btn-danger',
                        action: function () {
                            if (sessionStorage.getItem("sortOrder") != null) url = url + "?&sortOrder=" + sessionStorage.getItem("sortOrder");

                            var sortForm = document.getElementById('sortMenuForm');
                            $.ajax({
                                type: 'POST',
                                url: url,
                                data: new FormData(sortForm),
                                contentType: false,
                                processData: false,
                                success: function (res) {
                                    $('#view-all').html(res.html);
                                    $.notify(
                                        "Expense deleted",
                                        { globalPosition: "top left", clickToHide: true, autoHide: false, className: 'info' }
                                    );
                                },
                                error: function (err) {
                                    console.log(err)
                                }
                            })
                        }
                    },
                    close: function () {
                        btnClass: 'btn'
                    }
                }
            });

        } catch (ex) {
            console.log(ex)
        }

        //prevent default form submit event
        return false;

    }
    $(document).ready(function () {
        sessionStorage.setItem("sortMenuActive", "false");
    });

    $(window).resize(function () {
        if ($(window).width() >= 770) {
            document.getElementById("sortMenu").classList.remove("sortMenuCollapsed");
            document.getElementById("listCol").style.display = "block";
            document.getElementById("sortCollapseButtonInside").classList.add("sortCollapseNotActive");
            document.getElementById("sortCollapseButtonInside").classList.remove("sortCollapseActive");
            sessionStorage.setItem("sortMenuActive", "false");
        }
    });

    function sortCollapseFunction() {
        var sortParagraphs = document.getElementsByClassName("sort-paragraph");
        var sortHeader = document.getElementsByClassName("sort-header")[0];
        var currencyIcons = document.getElementsByClassName("currency");
        document.getElementById("sortCollapseButton").style.transformOrigin = "25% 50%";
        document.getElementById("sortCollapseButton").style.left = "right";
        var sortMenuClass = document.getElementsByClassName("sortMenu")[0];
        var sortMenu = document.getElementById("sortMenu");
        if (sessionStorage.getItem("sortMenuActive") == "false") {
            sortMenu.classList.add("sortMenuCollapsed");
            document.getElementById("listCol").style.display = "none";
            document.getElementById("sortCollapseButtonInside").classList.remove("sortCollapseNotActive");
            document.getElementById("sortCollapseButtonInside").classList.add("sortCollapseActive");
            //Array.prototype.forEach.call(sortParagraphs, function (item) {
            //    item.style.fontSize = "clamp(2rem, 2.5rem, 3rem)";
            //});

            sessionStorage.setItem("sortMenuActive", "true");
        }
        else {
            document.getElementById("sortCollapseButtonInside").classList.add("sortCollapseNotActive");
            document.getElementById("sortCollapseButtonInside").classList.remove("sortCollapseActive");
            sortMenu.classList.remove("sortMenuCollapsed");
            document.getElementById("listCol").style.display = "block";
            sessionStorage.setItem("sortMenuActive", "false");

        }
    };
</script>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.js"></script>
}