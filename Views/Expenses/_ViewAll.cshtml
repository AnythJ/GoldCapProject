@model ExpensesListViewModel



<style>

    .modal-backdrop {
        z-index: -1;
    }

    td.date_column, th.date_column {
        max-width: 240px;
    }

    .tableColumn {
        background-color: #2D3339;
        color: #9ba6b0;
        padding: 0;
        border: 3px solid #434d56;
        border-radius: 5px;
        border-right: none;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        overflow-x: auto;
        height: 100%;
        width: 80%;
        margin: 15px;
        overflow-y: scroll;
        float: left;
        margin-right: 0;
    }

        .tableColumn::-webkit-scrollbar {
            display: block;
            width: 3px;
            background-color: #434d56;
        }

        .tableColumn::-webkit-scrollbar-track-piece:start {
            margin-top: 47px;
            scrollbar-track-color: red;
        }

        .tableColumn::-webkit-scrollbar-thumb {
            background-color: #0790ab;
        }


    #sortMenu {
        border: 3px solid #434d56;
        border-radius: 5px;
        height: 100%;
        border-left: none;
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
        width: 18%;
        float: left;
        margin-top: 15px;
        color: #9ba6b0;
    }

    p.sort-header {
        background-color: #434d56;
        color: #9ba6b0;
        height: 48px;
        font-size: 16px;
        margin: 0;
        line-height: 48px;
        text-align: right;
        white-space: nowrap;
    }

        p.sort-header input.btn-sort {
            align-self: end;
            margin-right: 15px;
            font-weight: normal;
        }
        p.sort-header a.refresh-button {
            margin-right: 5px;
            cursor: pointer;
            text-decoration: none;
            color: #9ba6b0;
        }
            p.sort-header a.refresh-button:hover {
                color: #0DCAF0;
            }

        div.sort-paragraph {
            margin-top: 15px;
            color: #9ba6b0;
        }

    input[type=number], input[type=number] {
        border: 1px solid #434d56;
        border-radius: 15px;
        background-color: #434d56;
        text-align: center;
        outline: none;
        margin-left: 5px;
        color: #9ba6b0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        width: 80px;
    }
        input[type=number]:focus {
            border-color: #0DCAF0;
        }

    input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number]::placeholder {
        color: #9ba6b0;
        -moz-appearance: textfield;
    }

    span.priceLink {
        display: inline-block;
        height: 5px;
        width: 15px;
        border-radius: 5px;
        background-color: #434d56;
        margin-left: 5px;
    }

    input.currency {
        border: 1px solid #434d56;
        border-radius: 15px;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        width: 20px;
        margin: 0;
        padding: 0;
        height: 28px;
        border-left: 1px solid #9ba6b0;
    }


    h1.section-name {
        font-size: 20px;
        text-align: left;
        margin-left: 10px;
    }

    div.price-section {
        text-align: center;
    }

    div.categories-section {
        text-align: left;
    }

    #categoryList {
        list-style-type: none;
        padding-left: 16px;
        margin-bottom: 0;
    }

        #categoryList li:nth-child(n+8) {
            display: none;
        }
    #showMore {
        padding-left: 16px;
        font-size: 12px;
        margin-top: 0;
        cursor: pointer;
    }
        #showMore:hover {
            color: #657381;
        }
    #showArrow {
        cursor: pointer;
        color: #9ba6b0;
        font-size: 12px;
        margin-left: 4px;
    }
    input.form-check-input {
        background-color: #9ba6b0;
    }
        input.form-check-input:hover, input.form-check-input:checked {
            background-color: #0DCAF0;
            color: #9ba6b0;
        }
    input[type=datetime-local] {
        border: 1px solid #434d56;
        border-radius: 15px;
        background-color: #434d56;
        text-align: center;
        outline: none;
        margin-left: 5px;
        color: #9ba6b0;
        width: 200px;
    }
        input[type=datetime-local]:focus {
            border-color: #0DCAF0;
        }
    div.date-header {
        display: flex;
        vertical-align: middle;
        align-items: center;
        height: 52px;
    }
    div.date-input-div {
        text-align: center;
        padding-left: 0;
        margin-left: 5px;
        margin-right: 15px;
    }
    #date-from {
        margin-bottom: 5px;
    }
    input[type=text] {
        border: 1px solid #434d56;
        border-radius: 15px;
        background-color: #434d56;
        text-align: center;
        outline: none;
        margin-left: 5px;
        color: #9ba6b0;
    }
        input[type=text]:focus {
            border-color: #0DCAF0;
        }
    div.description-section {
        text-align: center;
    }
</style>



<div id="listCol" class="table-responsive tableColumn">
    <table class="table table-hover">
        <thead class="sticky-top">
            <tr class="align-text-top">
                <th>
                    <a style="cursor:pointer;" onclick="ListSort('@Url.Action("Sort", "Expenses", new { sortOrder = (ViewBag.AmountSortParm == null ? "Amount" : ViewBag.AmountSortParm)}, Context.Request.Scheme)','Sort')">Amount</a>
                </th>
                <th>
                    <a style="cursor:pointer;" onclick="ListSort('@Url.Action("Sort","Expenses",new { sortOrder = (ViewBag.CategorySortParm == null ? "Category" : ViewBag.CategorySortParm)},Context.Request.Scheme)','Sort')">Category</a>
                </th>
                <th>
                    Description
                </th>
                <th class="date_column">
                    <a style="cursor:pointer;" onclick="ListSort('@Url.Action("Sort","Expenses",new { sortOrder = (ViewBag.DateSortParm == null ? "Date" : ViewBag.DateSortParm)},Context.Request.Scheme)','Sort')">Date</a>
                </th>
                <th class="button_column">
                    <a onclick="showInPopup('@Url.Action("CreateOrEdit","Expenses",new { id = 0},Context.Request.Scheme)','New expense')" class="btn btn-success btn-sm">New expense</a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Expenses)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td class="descriptionTd">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="date_column">
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td class="button_column">
                        <a onclick="showInPopup('@Url.Action("CreateOrEdit","Expenses",new { id = item.Id},Context.Request.Scheme)','Update expense')" class="btn btn-primary btn-sm">Edit</a>
                        <form asp-action="Delete" asp-route-id="@item.Id" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                            <input type="submit" value="Delete" class="btn btn-danger btn-sm" />
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="sortMenu">
    <form id="sortMenuForm" asp-action="Sort" onsubmit="return PostSort(this);" autocomplete="off">
        <p class="sort-header">
            <a class="refresh-button" onclick="JqueryAjaxSort('@Url.Action("Sort", "Expenses", new { sortOrder = "default", refresh = true}, Context.Request.Scheme)','Sort', true)">
                <i class="fas fa-sync-alt"></i>
            </a>
            <span>Sort options</span>
            <input type="submit" value="Search" class="btn btn-outline-info btn-sm btn-sort" />
        </p>
        <div class="sort-paragraph description-section">
            <label>Description<input id="descriptionField" type="text" placeholder="search" asp-for="SortMenu.DescriptionSearch" /></label>
        </div>
        <div class="sort-paragraph price-section">
            <label>Price</label>
            <input id="priceFromField" asp-for="SortMenu.PriceFrom" type="number" placeholder="from" /><input type="number" class="currency" placeholder="$" disabled />
            <span class="priceLink"></span>
            <input id="priceToField" asp-for="SortMenu.PriceTo" type="number" placeholder="to" /><input type="number" class="currency" placeholder="$" disabled />
        </div>
        <div class="sort-paragraph categories-section">
            <h1 class="section-name">Categories</h1>
            <ul id="categoryList">
                @for (int i = 0; i < Model.CategoriesList.Count(); i++)
                {
                    <li>
                        <div class="form-check">
                            <label class="form-check-label">@Html.CheckBoxFor(c => c.SortMenu.ChosenCategories[i], new { @class = "form-check-input", @type = "checkbox" }) @Model.CategoriesList[i].Name</label>
                        </div>
                    </li>
                }
            </ul>
            <span id="showMore" onclick="showMore()">Show More</span><i onclick="showMore()" id="showArrow" class="fas fa-chevron-down"></i>
        </div>
        <div class="sort-paragraph date-section">
            <div class="row">
                <div class="col date-header"><h1 class="section-name">Date</h1></div>
                <div class="col date-input-div">
                    <input type="datetime-local" id="date-from" asp-for="SortMenu.DateFrom" placeholder="DD/MM/YYYY HH:DD"/>
                    <input type="datetime-local" asp-for="SortMenu.DateTo" />
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    function showMore() {
        var x = $('#showMore').text();
        var listLen = document.getElementById('categoryList').getElementsByTagName("li").length;
        if (x == 'Show More') {
            $('#categoryList li:hidden').slice(0, listLen).show();
            if ($('#categoryList li').length == $('#categoryList li:visible').length) {
                $('#showMore').innerHtml == 'Show Less';
                document.getElementById('showMore').innerHTML = 'Show Less';
                document.getElementById('showArrow').classList.remove('fa-chevron-down');
                document.getElementById('showArrow').classList.add('fa-chevron-up');
            }
        }
        else if (x == 'Show Less'){
            $('#categoryList li').slice(7, listLen).hide();
            $('#showMore').innerHtml == 'Show More';
            document.getElementById('showMore').innerHTML = 'Show More';
            document.getElementById('showArrow').classList.add('fa-chevron-down');
            document.getElementById('showArrow').classList.remove('fa-chevron-up');
        }

    };

    ListSort = (url, title, refresh) => {
        $.ajax({
            type: "GET",
            data: {
            },
            url: url,
            success: function (res) {
                $('#view-all').html(res.html);
            }
        })
    };
    
    PostSort = form => {
        try {
            $.ajax({
                type: 'POST',
                url: form.action,
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function (res) {
                    if (res.isValid) {
                        $('#view-all').html(res.html);
                        $('#sortMenuForm').html(res.html2); /*HERE 06.09*/
                    }
                    else {
                        $('#view-all').html(res.html);
                    }
                },
                error: function (err) {
                    console.log(err)
                }
            })
            //to prevent default form submit event
            return false;
        } catch (ex) {
            console.log(ex)
        }
    }


</script>



